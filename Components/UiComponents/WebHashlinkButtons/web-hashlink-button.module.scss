@import "/styles/variables";
@import "/styles/mixins";

// ? Button text is a span nested in individual component when called

.button-circle,
.button-circle * {
  border-radius: 50%;
}

.button-circle {
  width: 16rem;
  height: 16rem;
  cursor: pointer;
  z-index: 10;
}

.button-circle * {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;

  background: $papaya;
  font-family: $circle-button-font;
  font-size: 2.7rem;
  line-height: 4rem;
  font-weight: bolder;
  letter-spacing: 0.05rem;
  color: $jam;
  text-align: center;
  text-decoration: underline;
  text-underline-offset: 0.3rem;
  text-decoration-thickness: 0.3rem;

  box-shadow: rgba(64, 143, 170, 0.17) 15px 15px 49px 47px;

  &:active {
    background-color: $pale-blue;
    color: lighten($jam, 10%);
    text-decoration: none;
    font-size: 2.9rem;
    transition: ease-in-out 0.1s;
  }
}

@media (hover: hover) {
  .button-circle:hover * {
    background-color: $pale-blue;
    color: lighten($jam, 10%);
    text-decoration: none;
    font-size: 2.9rem;
    transition: ease-in-out 0.1s;
  }

  .outer-circle:hover > .animated-text {
    animation: animateText 6s infinite linear;
  }
}

.outer-circle {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 22rem;
  height: 22rem;
  border-radius: 50%;
  margin: 3rem;
}

.letter {
  position: absolute;
  left: 50%;
  text-transform: uppercase;
  font-size: 1.5rem;
  transform-origin: 0 11rem;
  font-family: $nav-font;
  color: darken($pale-blue, 30%);
  font-weight: bolder;
}

.animated-text {
  position: absolute;
  width: 100%;
  height: 100%;

  animation: animateText 12s infinite reverse linear;
}

@keyframes animateText {
  0% {
    transform: rotate(360deg);
  }

  100% {
    transform: rotate(0deg);
  }
}

// for every nth of type increase rotate degrees by 10
$deg: 0;
@for $i from 0 through 100 {
  $deg: $deg + 10;
  .letter {
    &:nth-of-type(#{$i}) {
      transform: rotate(0deg + $deg);
    }
  }
}
